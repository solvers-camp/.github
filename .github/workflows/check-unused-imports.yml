name: Check for unused imports using Pylint 

on:
  workflow_call:

jobs:
  check-unused-imports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      - name: Analysing the code with pylint
        run: | 
          # pylint_files=$(git ls-files *.py src/migration-scripts)
          # pylint_files=src/migration-scripts/*.py
          pylint --disable=all --enable=W0611 src/migration-scripts/*.py --output-format=json
          # pylint --disable=all --enable=W0611 $pylint_files --output-format=json

          # output=$(cat pylint_output.json | xargs)
          # echo "Step1 $output"

          # if [ -s pylint_output.json ]; then
          #   # echo "Pylint detected issues with unused imports."
          #   jq '.' pylint_output.json
          #   output=$(jq -r '.[] | "\(.path):\(.message) (\(.symbol)) at line \(.line)"' pylint_output.json)
          #   # echo "error_message=${output}" >> $GITHUB_ENV
          #   echo "error_message=Pylint detected issues with unused imports" >> $GITHUB_ENV
          #   echo "$output"
          #   # echo "::error ::Unused imports detected."
          #   exit 1
          # else
          #   echo "No issues with unused imports."
          #   echo "error_message=No issues in unused-imports" >> $GITHUB_ENV
          # fi
           
      # - name: Add PR comment
      #   if: always()
      #   uses: mshick/add-pr-comment@v2
      #   with:
      #     message: |-
      #       ${{ env.error_message == 'No issues in unused-imports' && 'üëç' || '‚ùå' }}
      #       ${{ env.error_message }}
      #     message-id: "UNUSED_IMPORTS_VALIDATION"
      #     allow-repeats: false